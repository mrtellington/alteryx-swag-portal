name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: alteryx-swag-portal

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure gcloud
      run: |
        echo "Setting project to: ${{ env.PROJECT_ID }}"
        gcloud config set project ${{ env.PROJECT_ID }}
        echo "Setting region to: ${{ env.REGION }}"
        gcloud config set run/region ${{ env.REGION }}
        echo "Current gcloud config:"
        gcloud config list
    
    - name: Check Cloud Run services
      run: |
        echo "Listing existing Cloud Run services:"
        gcloud run services list --region=${{ env.REGION }}
    
    - name: Deploy to Cloud Run
      run: |
        echo "Starting deployment to Cloud Run..."
        echo "Service name: ${{ env.SERVICE_NAME }}"
        echo "Region: ${{ env.REGION }}"
        echo "Project: ${{ env.PROJECT_ID }}"
        
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --source . \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars="NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }},NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }},SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }},GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }},NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }},NEXT_PUBLIC_APP_URL=${{ secrets.APP_URL }},SMTP_HOST=${{ secrets.SMTP_HOST }},SMTP_PORT=${{ secrets.SMTP_PORT }},SMTP_USER=${{ secrets.SMTP_USER }},SMTP_PASS=${{ secrets.SMTP_PASS }},FROM_EMAIL=${{ secrets.FROM_EMAIL }}"
    
    - name: Show service URL
      run: |
        echo "Getting service URL..."
        gcloud run services describe ${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --format 'value(status.url)'
